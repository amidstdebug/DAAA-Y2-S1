Provide user authentication/access levels
    • Store information about stores
    • Store information about employees
    • Store information about customers
    • Store information about transactions
    • Store information about movies
    • Store information about video cameras.
    • Store information about VCRs
    • Store information about rentals
    • Provide catalog of all movies
    • Provide reports:
         Total number of outgoing movies per store and per month
         The number of rentals per customer
         Ten Most frequently reserved titles for the last year
         Average number of outgoing movies per store
         Monthly revenue of the company for the 12 months

The store will have a catalogue. The catalogue of movies contains the title of the movie,
the producer, the director, two lead actors, the category of movie, the number of VHS
cassettes and DVDs, and charge per day. Items can be categorised under the types:
    • movie
    • vcr
    • videocamera

In the future, more items can be added to the list for rentals. The video store carries
multiple copies of the same title, and a store could have been assigned any number of
copies of each title. A store that has more copies of a given title than assigned to it will
return these at the end of each week to head office once, which redistributes them to
appropriate stores. Similarly, the store carries multiple pieces of equipment under its
charge and customers may rent a particular piece of the equipment.

Store has inventory of all items and the web page they will be using has management capabilities to:
    • Query, add, update, and remove movie, and equipment

    • Show status of movie, and equipment

    • Show rentals of items

    • Handle reservation, rental and returning of movies and equipment by members.
      Transaction can be either 'Reserve' or 'Rent'. Assume that a new record is created
      for each individual transaction. i.e a reserve transaction will not later be updated
      to rent if the customer decides to rent the items out.

    • Manage payments for rental by members (including late charges)
      Late charges are computed based on the number of days overdue. For movies,
      $0.50 per day and for equipment $1.50 per day. There is a non-partial return
      policy enforced once the items are on loan for each particular transaction. It
      means that a customer must return all loaned items at the same time and not on
      each item basis for that transaction. The amount paid covers the rental charge as
      well as the penalty charge. It will be computed once all loaned items are returned
      including any late charges.

Various employees will use the system across various stores. The system needs to be
protected from unauthorized users/access to prevent malicious activities. The
application will need to provide the means to limit access and functions of the system
by user. A manager may have the ability to create, modify, and delete information, but
a sales associate can only rent or reserve movies and equipment or view information
about customers. The system is flexible in allowing the customer define the level of
authorization.

Employees are paid under the following categories:
    • manager
    • assistantManager
    • partTime

C. The Submission Deliverables

Deliverable should be a zip file with the following file-naming convention: “ST1501-
YourClass-YourStudentID-YourName.zip.
Example ST1501-DITFT2B01-9999999-Benson Ang.zip
Zip file should include the following items:

    a) Use the submission template provided for the following:
        • The Entity Relationship Diagram to support all the requirements stated in
          section B.

    b) Two SQL Scripts in SQL extension
        • Create Table SQL Script for all tables.
          All tables must be implementable in MS Server taking into consideration the
          resolution of M:N relationships

        • Explain your database design (describe the purpose of each table, list the
          required fields (indicate PK), the relationship between tables (indicate FK)
          disregard referential actions for FK

        • Insert Records SQL Script for all tables
          Create sufficient variety of data to be inserted into the tables so that you are
          able to fully support the SQL SELECT statements for the queries and their
          corresponding query results.

    c) Write SQL statement for each query and display their results.
         Query 1 - View total number of outgoing movies per store and per month.

         Query 2 - View the average number of rental days
          i) per customer
          ii) per title

         Query 3 - View 10 most frequently reserved titles for last year
          The query must be able to retrieve records from any one year past from date
          of query

         Query 4 - View 100 best customers in terms of money paid to the
          company

         Query 5 - View monthly revenue of the company for the 12 months
          The query must be flexible to retrieve any previous 12 months from any date
          of query and exclude penalty charges

         Query 6- View the total amount of penalty incurred by each customer for
          movies and equipment respectively
